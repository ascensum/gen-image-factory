# Job History Panel Component Specification

## Component Purpose
The Job History Panel displays a scrollable list of completed job executions with status information, statistics, and quick actions. It provides users with access to job history and management capabilities.

## Layout Structure
```
┌─────────────────────────────────────┐
│ Job History (Left Panel - 40%)     │
├─────────────────────────────────────┤
│ ┌─────────────────────────────┐     │
│ │ Job Card 1                  │     │
│ │ [Status] [ID] [Time] [Dur] │     │
│ │ [Quick Actions]             │     │
│ └─────────────────────────────┘     │
│                                     │
│ ┌─────────────────────────────┐     │
│ │ Job Card 2                  │     │
│ │ [Status] [ID] [Time] [Dur] │     │
│ │ [Quick Actions]             │     │
│ └─────────────────────────────┘     │
│                                     │
│ Job Statistics                      │
│ Total: 45 | Success: 92% | Avg: 2.3min │
└─────────────────────────────────────┘
```

## Core Components

### 1. Job Executions List
- **Source**: `job-execution:get-all` and `job-execution:history`
- **Scroll**: Vertical scrollable list
- **Pagination**: Load more on scroll (50 items per page)
- **Empty State**: "No completed jobs yet" message
- **Loading**: Skeleton loader while fetching data

### 2. Job Cards
- **Size**: 300px width, auto height
- **Content**: Job ID, timestamp, status, duration, thumbnail
- **Status Badges**: Color-coded status indicators
- **Quick Actions**: Hover to reveal action buttons
- **Click**: Opens job details modal

### 3. Status Badges
- **Completed**: Green badge with checkmark icon
- **Running**: Blue badge with spinner animation
- **Failed**: Red badge with X icon
- **Stopped**: Gray badge with pause icon
- **Size**: 24px height, rounded corners

### 4. Job Statistics Display
- **Source**: `job-execution:statistics` backend method
- **Content**: Total jobs, success rate, average duration
- **Format**: "Total: 45 | Success: 92% | Avg: 2.3min"
- **Updates**: Refresh on job completion
- **Position**: Bottom of panel

### 5. Quick Actions
- **View Details**: Opens job details modal
- **Export to Excel**: Downloads Excel file with job data
- **Delete Job**: Confirmation dialog with job details
- **Rerun Job**: Start new job with same configuration
- **Visibility**: Hover to reveal, right-click context menu

## Visual Design

### Typography
- **Primary Font**: System default (San Francisco on macOS, Segoe UI on Windows)
- **Job ID**: 16px, font-weight: 600, monospace
- **Timestamp**: 12px, color: Gray-500
- **Duration**: 14px, font-weight: 500
- **Statistics**: 14px, color: Gray-600

### Spacing
- **Card Padding**: 16px on all sides
- **Card Spacing**: 12px between cards
- **Action Spacing**: 8px between action buttons
- **Panel Padding**: 24px on all sides

### Colors
- **Card Background**: White (#FFFFFF)
- **Card Border**: 1px Gray-200
- **Hover State**: Gray-50 background
- **Selected State**: Blue-50 background with blue border
- **Status Colors**: Green (completed), Blue (running), Red (failed), Gray (stopped)

## Interactive Elements

### Card Interactions
- **Hover**: Subtle elevation, quick actions visible
- **Click**: Opens job details modal
- **Right-click**: Context menu with actions
- **Selection**: Visual feedback for selected job

### Quick Action Buttons
- **Size**: 32px height, 8px padding
- **Icons**: Lucide React icons
- **Hover**: Scale 1.05, color change
- **Click**: Immediate feedback with loading state

### Scroll Behavior
- **Smooth Scrolling**: Native smooth scroll
- **Load More**: Trigger when near bottom
- **Scroll to Top**: Button appears after scrolling down
- **Virtual Scrolling**: For large datasets (1000+ jobs)

## Backend Integration

### Data Fetching
- **Initial Load**: `job-execution:get-all` with limit 50
- **Load More**: `job-execution:history` with pagination
- **Statistics**: `job-execution:statistics` on component mount
- **Real-time Updates**: Refresh on job completion

### Quick Actions Integration
- **View Details**: `getJobResults(jobExecutionId)` - Get detailed job results
- **Export to Excel**: `exportToExcel(jobExecutionId)` - Download Excel file
- **Delete Job**: `deleteJobExecution(id)` - Delete job and associated images
- **Rerun Job**: Uses job configuration to start new job

### Error Handling
- **Load Failed**: Retry button with error message
- **Delete Failed**: Error message with retry option
- **Export Failed**: Clear error with download link
- **Network Error**: Offline indicator with cached data

## State Management

### Loading States
- **Initial Load**: Skeleton loader for job cards
- **Load More**: Loading spinner at bottom
- **Action Loading**: Button loading state
- **Statistics Loading**: Skeleton for statistics

### Empty States
- **No Jobs**: "No completed jobs yet" with illustration
- **No Results**: "No jobs match your filter" with clear filters button
- **Error State**: Error message with retry button

### Selection State
- **Single Selection**: One job can be selected
- **Multi Selection**: Multiple jobs for bulk actions (future)
- **Selection Feedback**: Visual highlight and action bar

## Accessibility

### Keyboard Navigation
- **Tab Order**: Job cards → Quick actions → Statistics
- **Arrow Keys**: Navigate between job cards
- **Enter**: Open job details
- **Space**: Select job for bulk actions

### Screen Reader Support
- **ARIA Labels**: Clear descriptions for job cards
- **Status Announcements**: Announce job status changes
- **Action Descriptions**: Clear descriptions for quick actions
- **Statistics**: Announce statistics updates

### Focus Management
- **Card Focus**: Visible focus indicator on job cards
- **Action Focus**: Focus moves to action buttons on hover
- **Modal Focus**: Trap focus in job details modal

## Responsive Design

### Desktop (800px+)
- **Panel Width**: 40% of dashboard width
- **Card Layout**: Full width cards
- **Action Visibility**: Always visible on hover
- **Statistics**: Full statistics display

### Tablet (600px-800px)
- **Panel Width**: 50% of dashboard width
- **Card Layout**: Compressed cards
- **Action Visibility**: Icon-only actions
- **Statistics**: Abbreviated statistics

### Mobile (<600px)
- **Panel Width**: Full width (stacked layout)
- **Card Layout**: Full width cards
- **Action Visibility**: Always visible
- **Statistics**: Essential statistics only

## Performance Considerations

### Data Loading
- **Lazy Loading**: Load jobs as needed
- **Caching**: Cache job data in memory
- **Debouncing**: Debounce search and filter inputs
- **Virtual Scrolling**: For large datasets

### Memory Management
- **Event Listeners**: Cleanup on unmount
- **Image Loading**: Lazy load job thumbnails
- **State Cleanup**: Clear selected state on unmount
- **Timer Cleanup**: Clear refresh timers

### Optimization
- **React.memo**: Memoize job cards
- **useCallback**: Memoize action handlers
- **useMemo**: Memoize filtered job list
- **Image Optimization**: Compress thumbnails

## Testing Requirements

### Unit Tests
- **Job Card Rendering**: Correct display of job data
- **Status Badges**: Proper color and icon for each status
- **Quick Actions**: Proper action button functionality
- **Statistics Display**: Correct calculation and display

### Integration Tests
- **Backend Integration**: Real API calls for job data
- **Quick Actions**: Real backend method calls
- **Error Scenarios**: Network failure handling
- **Real-time Updates**: Status change handling

### E2E Tests
- **Job History Workflow**: View → Details → Export
- **Delete Workflow**: Select → Delete → Confirm
- **Rerun Workflow**: Select → Rerun → Monitor
- **Responsive Design**: Cross-device functionality

## Error Scenarios

### Data Loading Errors
- **Network Failure**: Retry button with offline indicator
- **Backend Error**: Error message with technical details
- **Empty Response**: Empty state with helpful message
- **Partial Load**: Show loaded data with error indicator

### Action Errors
- **Delete Failed**: Error message with retry option
- **Export Failed**: Clear error with alternative download
- **Rerun Failed**: Error message with configuration check
- **View Failed**: Error message with manual navigation

### User Recovery
- **Retry Mechanisms**: Automatic and manual retry options
- **Fallback Actions**: Alternative ways to accomplish tasks
- **Error Guidance**: Clear instructions for error resolution
- **Support Information**: Contact information for persistent issues
