Generate ONLY the ParametersSection.tsx React component file. Do not create any other files, folders, or project structure.

Create a single TypeScript React component file named ParametersSection.tsx with the following requirements:

TECH STACK:
- React 18+ with TypeScript
- Tailwind CSS for styling
- Lucide React for icons

COMPONENT: ParametersSection.tsx
LOCATION: src/renderer/components/Settings/ParametersSection.tsx

REQUIREMENTS:
- Toggle switches for boolean settings (Remove Background, etc.)
- Sliders for quality settings
- CostIndicator components for paid features
- Parameter presets and advanced options
- Real-time cost calculation

FEATURES:
- Toggle switches for boolean parameters
- Range sliders for quality settings
- Cost indicators for paid features
- Parameter presets
- Advanced options section
- Real-time cost calculation
- Validation feedback

COMPONENT STRUCTURE:
<ParametersSection>
  <div className="space-y-6">
    <h2 className="text-xl font-semibold">Generation Parameters</h2>
    
    <div className="space-y-4">
      <div className="flex items-center justify-between">
        <div>
          <label className="text-sm font-medium">Remove Background</label>
          <p className="text-xs text-gray-500">Automatically remove background from generated images</p>
        </div>
        <ToggleSwitch
          checked={removeBackground}
          onChange={handleRemoveBackgroundChange}
        />
        <CostIndicator costLevel="medium" />
      </div>
      
      <div className="space-y-2">
        <label className="text-sm font-medium">Quality Level</label>
        <RangeSlider
          value={qualityLevel}
          onChange={handleQualityLevelChange}
          min={1}
          max={5}
          step={1}
          marks={['Low', 'Medium', 'High', 'Ultra', 'Maximum']}
        />
        <CostIndicator costLevel="high" />
      </div>
      
      <div className="flex items-center justify-between">
        <div>
          <label className="text-sm font-medium">Enable Metadata</label>
          <p className="text-xs text-gray-500">Add metadata to generated images</p>
        </div>
        <ToggleSwitch
          checked={enableMetadata}
          onChange={handleMetadataChange}
        />
        <CostIndicator costLevel="low" />
      </div>
      
      <div className="flex items-center justify-between">
        <div>
          <label className="text-sm font-medium">AI Quality Check</label>
          <p className="text-xs text-gray-500">Use AI to validate image quality</p>
        </div>
        <ToggleSwitch
          checked={enableQualityCheck}
          onChange={handleQualityCheckChange}
        />
        <CostIndicator costLevel="high" />
      </div>
    </div>
    
    <ParameterPresets />
    <AdvancedOptions />
  </div>
</ParametersSection>

PROPS INTERFACE:
interface ParametersSectionProps {
  removeBackground: boolean;
  qualityLevel: number;
  enableMetadata: boolean;
  enableQualityCheck: boolean;
  onRemoveBackgroundChange?: (enabled: boolean) => void;
  onQualityLevelChange?: (level: number) => void;
  onMetadataChange?: (enabled: boolean) => void;
  onQualityCheckChange?: (enabled: boolean) => void;
  onPresetChange?: (preset: string) => void;
  isLoading?: boolean;
  error?: string | null;
}

PARAMETER TYPES:
- Boolean toggles: Remove Background, Enable Metadata, AI Quality Check
- Range sliders: Quality Level (1-5), Batch Size (1-10)
- Dropdown selects: Model Selection, Style Presets
- Text inputs: Custom Prompts, Advanced Parameters

COST LEVELS:
- Remove Background: Medium cost
- Quality Level: High cost (scales with level)
- Enable Metadata: Low cost
- AI Quality Check: High cost

FEATURES:
- Toggle switches with labels and descriptions
- Range sliders with marks and labels
- Cost indicators for each feature
- Parameter presets (Basic, Standard, Advanced, Custom)
- Advanced options collapsible section
- Real-time cost calculation
- Validation feedback

STYLING:
- Use Tailwind CSS classes
- Consistent spacing and typography
- Toggle switch styling
- Range slider styling
- Cost indicator integration
- Preset button styling

ACCESSIBILITY:
- Proper ARIA labels and descriptions
- Keyboard navigation support
- Screen reader announcements
- Focus management
- Slider accessibility

PRESETS:
- Basic: Minimal features, low cost
- Standard: Balanced features, medium cost
- Advanced: All features, high cost
- Custom: User-defined settings

DO NOT INCLUDE:
- External slider libraries
- Complex animations
- External UI libraries
- Server-side calculations

Generate ONLY the complete ParametersSection.tsx file with all imports, interfaces, and implementation. Do not create any other files or project structure. 