Generate ONLY the FileSelector.tsx React component file. Do not create any other files, folders, or project structure.

Create a single TypeScript React component file named FileSelector.tsx with the following requirements:

TECH STACK:
- React 18+ with TypeScript
- Tailwind CSS for styling
- Lucide React for icons
- Electron IPC for native file dialogs

COMPONENT: FileSelector.tsx
LOCATION: src/renderer/components/Settings/FileSelector.tsx

REQUIREMENTS:
- File/directory selection with Electron's native dialog.showOpenDialog
- Drag-and-drop support from OS file manager
- Path validation and permission checking
- Recent paths dropdown and auto-complete
- Integrate with OS recent files list

FEATURES:
- Browse button to open native file dialog
- Drag-and-drop area for file selection
- Path display with validation
- Recent paths dropdown
- File type filtering
- Permission checking
- Error handling for invalid paths

COMPONENT STRUCTURE:
<FileSelector>
  <div className="space-y-2">
    <label className="block text-sm font-medium text-gray-700">
      {label}
    </label>
    <div className="flex space-x-2">
      <input
        type="text"
        value={selectedPath}
        onChange={handlePathChange}
        className="flex-1"
        placeholder="Select file or directory"
        readOnly
      />
      <button
        type="button"
        onClick={openFileDialog}
        className="px-4 py-2 bg-blue-500 text-white rounded-md"
      >
        Browse
      </button>
    </div>
    <div
      className="border-2 border-dashed border-gray-300 rounded-md p-4 text-center"
      onDrop={handleDrop}
      onDragOver={handleDragOver}
    >
      <p className="text-gray-500">Drag and drop files here</p>
    </div>
    <RecentPathsDropdown />
    <ValidationMessage />
  </div>
</FileSelector>

PROPS INTERFACE:
interface FileSelectorProps {
  label: string;
  value: string;
  onChange: (path: string) => void;
  onValidation?: (isValid: boolean) => void;
  type: 'file' | 'directory' | 'multiple';
  fileTypes?: string[];
  placeholder?: string;
  disabled?: boolean;
  required?: boolean;
}

STATE MANAGEMENT:
- Selected path state
- Validation state (validating, valid, invalid)
- Error message state
- Recent paths state
- Drag-and-drop state

FILE DIALOG INTEGRATION:
- Use Electron's dialog.showOpenDialog
- Support for file and directory selection
- File type filtering
- Multiple file selection
- Recent paths integration

DRAG AND DROP:
- Handle file drops from OS file manager
- Visual feedback during drag operations
- Validate dropped files
- Support for multiple files

VALIDATION:
- Check if path exists
- Verify file permissions
- Validate file types
- Check directory access

STYLING:
- Use Tailwind CSS classes
- Drag-and-drop visual feedback
- Error state styling
- Loading state styling
- Disabled state styling

ACCESSIBILITY:
- Proper ARIA labels and descriptions
- Keyboard navigation support
- Screen reader announcements
- Focus management
- Error message announcements

NATIVE OS INTEGRATION:
- Use Electron's native file dialog
- Integrate with OS recent files
- Handle OS-specific file paths
- Support for network drives

DO NOT INCLUDE:
- External file handling libraries
- Complex animations
- Server-side file operations
- External UI libraries

Generate ONLY the complete FileSelector.tsx file with all imports, interfaces, and implementation. Do not create any other files or project structure. 