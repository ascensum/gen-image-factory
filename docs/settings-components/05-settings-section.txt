Generate ONLY the SettingsSection.tsx React component file. Do not create any other files, folders, or project structure.

Create a single TypeScript React component file named SettingsSection.tsx with the following requirements:

TECH STACK:
- React 18+ with TypeScript
- Tailwind CSS for styling
- Lucide React for icons

COMPONENT: SettingsSection.tsx
LOCATION: src/renderer/components/Settings/SettingsSection.tsx

REQUIREMENTS:
- Collapsible section containers for settings groups
- Validation status indicators
- Progressive disclosure for advanced options
- Help text and documentation links
- Expandable/collapsible functionality

FEATURES:
- Collapsible sections with smooth animations
- Validation status indicators (valid, invalid, warning)
- Progressive disclosure for advanced options
- Help text and documentation links
- Section headers with icons
- Loading states for async operations

COMPONENT STRUCTURE:
<SettingsSection>
  <div className="border border-gray-200 rounded-lg">
    <button
      type="button"
      onClick={toggleSection}
      className="w-full px-4 py-3 flex items-center justify-between hover:bg-gray-50"
    >
      <div className="flex items-center space-x-2">
        <SectionIcon className="w-5 h-5" />
        <h3 className="text-lg font-medium">{title}</h3>
        <ValidationStatus />
      </div>
      <ChevronIcon className={`w-5 h-5 transition-transform ${isExpanded ? 'rotate-180' : ''}`} />
    </button>
    {isExpanded && (
      <div className="px-4 pb-4 space-y-4">
        <div className="text-sm text-gray-600">{description}</div>
        {children}
        <HelpText />
      </div>
    )}
  </div>
</SettingsSection>

PROPS INTERFACE:
interface SettingsSectionProps {
  title: string;
  description?: string;
  children: React.ReactNode;
  isExpanded?: boolean;
  onToggle?: (expanded: boolean) => void;
  validationStatus?: 'valid' | 'invalid' | 'warning' | 'loading';
  validationMessage?: string;
  helpText?: string;
  helpLink?: string;
  icon?: React.ComponentType<{ className?: string }>;
  className?: string;
}

VALIDATION STATUS:
- Valid: Green checkmark, section is properly configured
- Invalid: Red X, section has errors
- Warning: Yellow warning, section has issues
- Loading: Spinner, section is being validated

FEATURES:
- Smooth expand/collapse animations
- Validation status indicators
- Help text and documentation links
- Icon support for section headers
- Keyboard navigation support
- Screen reader announcements

STYLING:
- Use Tailwind CSS classes
- Smooth transitions for expand/collapse
- Proper focus states and focus rings
- Consistent spacing and typography
- Accessible color contrast

ACCESSIBILITY:
- Proper ARIA labels and descriptions
- Keyboard navigation support
- Screen reader announcements for state changes
- Focus management
- Expand/collapse announcements

ANIMATIONS:
- Smooth height transitions
- Chevron rotation animation
- Fade in/out for content
- Loading spinner animations

HELP TEXT FEATURES:
- Contextual help information
- Links to documentation
- Tooltips for complex features
- Progressive disclosure for advanced options

DO NOT INCLUDE:
- External animation libraries
- Complex state management
- External UI libraries
- Server-side features

Generate ONLY the complete SettingsSection.tsx file with all imports, interfaces, and implementation. Do not create any other files or project structure. 