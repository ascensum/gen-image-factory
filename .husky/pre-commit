#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

# Non-interactive, fast safety net
echo "[husky] Running focused regression guard..."

# Run unit normalizer tests and critical Single Job focused tests
npm run -s test:run -- /src/renderer/components/Jobs/__tests__/SingleJobView.settings-save.test.tsx /src/renderer/components/Jobs/__tests__/SingleJobView.statistics.test.tsx /src/renderer/components/Jobs/__tests__/SingleJobView.delete-refresh.test.tsx /tests/unit/utils/processing.normalizer.test.ts || exit 1

echo "[husky] OK"

#!/bin/sh

# Husky pre-commit hook: critical regression tests including retry functionality

echo "🧪 Running critical regression tests..."

# Test retry functionality (most critical)
echo "🔄 Testing Retry Functionality..."
npm run test:retry || exit 1

# Test job management (existing critical tests)
echo "📋 Testing Job Management..."
npm run test:job-management || exit 1

# Test cross-platform path handling (critical for preventing hardcoded paths)
echo "🛣️ Testing Cross-Platform Path Handling..."
npm test -- tests/unit/backend/pathResolution.test.js --run || exit 1

# Test import regression (prevents constructor errors)
echo "📦 Testing Import Regression..."
npm test -- tests/unit/backend/importRegression.test.js --run || exit 1

# Test retry executor functionality (prevents retry_pending lock)
echo "🔄 Testing Retry Executor Functionality..."
npm test -- tests/unit/services/RetryExecutor.test.ts --run || exit 1

echo "✅ All critical tests passed!"
